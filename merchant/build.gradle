plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'checkstyle'
    id ("org.springdoc.openapi-gradle-plugin") version "1.7.0"
}

group = 'com.vvkozlov.emerchantpay'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.1.3'
    implementation 'org.springframework.kafka:spring-kafka:3.0.10'
    implementation 'org.flywaydb:flyway-core:9.21.2'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'org.keycloak:keycloak-core:22.0.1'
    implementation 'org.keycloak:keycloak-admin-client:22.0.1'
    implementation 'org.keycloak:keycloak-spring-boot-starter:22.0.1'
    implementation 'org.keycloak:keycloak-policy-enforcer:22.0.1'
    compileOnly 'org.projectlombok:lombok:1.18.28'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.1.3'
    runtimeOnly 'org.postgresql:postgresql:42.6.0'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.1.3'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.3'
    testImplementation 'org.springframework.kafka:spring-kafka-test:3.0.10'
    testImplementation 'org.springframework.security:spring-security-test:6.1.3'
    testImplementation 'org.keycloak:keycloak-test-helper:22.0.1'
    testImplementation 'io.cucumber:cucumber-java:7.13.0'
//    testImplementation 'io.cucumber:cucumber-spring:7.13.0'
    testImplementation 'io.cucumber:cucumber-junit:7.13.0'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.13.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.junit.platform:junit-platform-suite:1.10.0'
}

openApi {
    apiDocsUrl.set("https://localhost:9000/api/docs")
    outputDir.set(file("$buildDir/docs"))
    outputFileName.set("swagger.json")
    waitTimeInSeconds.set(10)
}

checkstyle {
    toolVersion = '10.12.2'
    configFile = file("${project.projectDir}/config/checkstyle.xml")
    showViolations = true
}

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = false
        html.required = true
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
